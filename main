#!/usr/bin/env bash
# --------------------( LICENSE                            )--------------------
# Copyright (c) 2022-2023 Alexis Pietak & Cecil Curry.
# See "LICENSE" for further details.
#
# --------------------( SYNOPSIS                           )--------------------
# Bash shell script wrapping this project's desktop- and mobile-friendly
# Kivy-based app.
#
# This script is defined as a Bash rather than Bourne script purely for the
# canonical ${BASH_SOURCE} string global, reliably providing the absolute
# pathnames of this script and hence this script's directory.

# ....................{ PREAMBLE                           }....................
# Enable strictness for sanity.
set -e

# ....................{ ARRAYS                             }....................
# Array of all arguments with which to invoke Python.
# PYTHON_ARGS=( command python3 )
# PYTHON_ARGS=( command python3.6 )
# PYTHON_ARGS=( command python3.8 )
# PYTHON_ARGS=( command python3.9 )
PYTHON_ARGS=( command python3.10 )
# PYTHON_ARGS=( command pypy3.7 )

# Array of all arguments to be passed to "python3" below, running this
# project's Kivy-based app with all passed arguments.
CALCULION_ARGS=(
    #FIXME: Uncomment this as needed (e.g., to debug hidden resource warnings).
    # Enable the Python Development Mode (PDM). See also commentary for the
    # ${PYTHONDEVMODE} shell variable in the "tox.ini" file.
    -X dev

    # Implicitly import the "calculion.__main__" dunder submodule.
    -m calculion

    # All passed arguments as is.
    "${@}"
)

# ....................{ FUNCTIONS                          }....................
# str canonicalize_path(str pathname)
#
# Canonicalize the passed pathname.
function canonicalize_path() {
    # Validate and localize all passed arguments.
    (( $# == 1 )) || {
        echo 'Expected exactly one argument.' 1>&2
        return 1
    }
    local pathname="${1}"

    # The "readlink" command's GNU-specific "-f" option would be preferable but
    # is unsupported by macOS's NetBSD-specific version of "readlink". Instead,
    # just defer to Python for portability.
    command python3 -c "
import os, sys
print(os.path.realpath(os.path.expanduser(sys.argv[1])))" "${pathname}"
}

# ....................{ PATHS                              }....................
# Absolute or relative filename of this script.
script_filename="$(canonicalize_path "${BASH_SOURCE[0]}")"

# Absolute or relative dirname of the directory directly containing this
# script, equivalent to the top-level directory for this project.
script_dirname="$(dirname "${script_filename}")"

# ....................{ MAIN                               }....................
# Temporarily change the current working directory to that of this project.
pushd "${script_dirname}" >/dev/null

# Deploy this project's Kivy-based app with all passed arguments.
"${PYTHON_ARGS[@]}" "${CALCULION_ARGS[@]}"

# 0-based exit code reported by the prior command.
exit_code=$?

# Revert the current working directory to the prior such directory.
popd >/dev/null

# Report the same exit code from this script.
exit ${exit_code}
